name: CI/CD Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    # Each job in a workflow runs in a fresh virtual environment managed by Github.
    steps:
      # Checks-out to the Github's predefined/pre-created actions directory, where all the actions are 'hosted'
      - name: Checkout code
        # https://github.com/actions/checkout
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Build Docker images
        shell: bash
        # pipe "|" is a multi-line syntax/cmd in YAML
        run: |
          echo ---Building and starting up docker---
          docker-compose up --build -d

      - name: Check if backend is running
        run: |
          # Function to check whether backend (last container which depends on the mongodb) is up and running
          check_backend_log_message() {
            docker logs docker_mongo_react_express-backend-1 2>&1 | grep "Server listening on port 8080"
          }
          while [[ -z "$(check_backend_log_message)" ]]; do
            sleep 2
          done
          echo ---Backend is up and running---

      - name: Check Running Images
        run: |
          # Function to check whether all containers are up and running
          count_running_containers() {
            docker ps -q | wc -l
          }
          # Expected amount of containers running
          expected_containers=3
          while [[ "$(count_running_containers)" -lt "$expected_containers)" ]]; do
            sleep 2
          done
          echo ---Containers up and running---

      # Runs a set of commands using the runners shell
      # - name: Run a multi-line script
      #   run: |
      #     echo Add other actions to build,
      #     echo test, and deploy your project.

      - name: Stop Docker Compose
        run: |
          docker-compose down
